/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.component.LeaveApplication.DetailLeaveRequestForm;

import controller.DAO.ApprovedLeaveRequestDAO;
import controller.DAO.LeaveRequestDAO;
import controller.DAOImp.ApprovedLeaveRequestDAOImp;
import controller.DAOImp.LeaveRequestDAOImp;
import controller.Session.MySession;
import controller.Session.SharedData;
import java.awt.Window;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import java.util.Date;
import javax.swing.JDialog;
import javax.swing.SwingUtilities;
import model.ApprovedLeaveRequest;
import model.Employee;
import model.LeaveRequest;
import org.hibernate.Session;
import util.HibernateUtil;
import view.component.Manage_Component.ManageLeaveApplication_Component;

/**
 *
 * @author PC
 */
public class DetailLeaveForm_Component extends javax.swing.JPanel {
    
    private LeaveRequest leaveRequest;
    private Employee employee;
    private Date date;
    
    public DetailLeaveForm_Component(LeaveRequest leaveRequest, Employee employee, Date date) {
        this.leaveRequest = leaveRequest;
        this.employee = employee;
        this.date = date;
        initComponents();
        customComponents();
        initData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        registrator = new javax.swing.JLabel();
        from = new javax.swing.JLabel();
        jLabel = new javax.swing.JLabel();
        toDate = new com.toedter.calendar.JDateChooser();
        typeOfLeave = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        amountLeave = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        totalLeave = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reason = new javax.swing.JTextPane();
        confirmBtn = new javax.swing.JButton();
        denyBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        approverName = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        approveDate = new javax.swing.JLabel();
        registrationDate = new javax.swing.JLabel();
        fromDate = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Thông tin nghỉ phép");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Ngày đăng ký");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Người đăng ký");

        registrator.setForeground(new java.awt.Color(0, 0, 0));
        registrator.setText("  Lâm Quốc Nhân");
        registrator.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        from.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        from.setForeground(new java.awt.Color(0, 0, 0));
        from.setText("Từ ngày");

        jLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel.setForeground(new java.awt.Color(0, 0, 0));
        jLabel.setText("Đến ngày");

        toDate.setBackground(new java.awt.Color(255, 255, 255));
        toDate.setForeground(new java.awt.Color(0, 0, 0));
        toDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                toDatePropertyChange(evt);
            }
        });

        typeOfLeave.setBackground(new java.awt.Color(255, 255, 255));
        typeOfLeave.setForeground(new java.awt.Color(0, 0, 0));
        typeOfLeave.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nghỉ phép", "Nghỉ không phép" }));
        typeOfLeave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Loại nghỉ");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Buổi bắt đầu nghỉ");

        amountLeave.setBackground(new java.awt.Color(255, 255, 255));
        amountLeave.setForeground(new java.awt.Color(0, 0, 0));
        amountLeave.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0.5", "1.0" }));
        amountLeave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Tổng ngày nghỉ");

        totalLeave.setForeground(new java.awt.Color(0, 0, 0));
        totalLeave.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Lý do nghỉ");

        jScrollPane1.setViewportView(reason);

        confirmBtn.setBackground(new java.awt.Color(0, 51, 255));
        confirmBtn.setForeground(new java.awt.Color(255, 255, 255));
        confirmBtn.setText("Lưu");
        confirmBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });

        denyBtn.setBackground(new java.awt.Color(255, 255, 255));
        denyBtn.setForeground(new java.awt.Color(255, 0, 51));
        denyBtn.setText("Xóa");
        denyBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Người duyệt");

        approverName.setForeground(new java.awt.Color(0, 0, 0));
        approverName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Ngày duyệt ");

        approveDate.setForeground(new java.awt.Color(0, 0, 0));
        approveDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        registrationDate.setForeground(new java.awt.Color(0, 0, 0));
        registrationDate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        registrationDate.setText("   20/09/2002");
        registrationDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        fromDate.setForeground(new java.awt.Color(0, 0, 0));
        fromDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(from)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(denyBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(confirmBtn))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(totalLeave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(typeOfLeave, 0, 230, Short.MAX_VALUE)
                                .addComponent(registrationDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel6))
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addComponent(fromDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(registrator, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(toDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(amountLeave, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGap(0, 0, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(approverName, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(approveDate, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(registrationDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(registrator, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(from)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fromDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(amountLeave, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(typeOfLeave, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(totalLeave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(approverName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(approveDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(denyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed
        Date currentDate = new Date();
        try (Session session = HibernateUtil.getSessionFactory().openSession()) {
            LeaveRequestDAO leaveRequestDAO = new LeaveRequestDAOImp(session);
            ApprovedLeaveRequestDAO approvedLeaveRequestDAO = new ApprovedLeaveRequestDAOImp(session);
            
            String btnName = confirmBtn.getText();
            
            switch (btnName) {
                case "Lưu":
                    String fromDate = this.fromDate.getText();
                    
                    SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                    Date fromDateValue = null;
                    try {
                        // Chuyển từ String sang Date
                        fromDateValue = dateFormat.parse(fromDate);
                    } catch (ParseException e) {
                        e.printStackTrace();
                    }
                    Date toDateValue = toDate.getDate();
                    
                    LocalDate cur = LocalDate.now();
                    Date registraionDate = Date.from(cur.atStartOfDay(ZoneId.systemDefault()).toInstant());
                    
                    String typeValue = (String) typeOfLeave.getSelectedItem();
                    
                    double startLeaveValue = Double.parseDouble((String) amountLeave.getSelectedItem());
                    
                    int totalDayValue = Integer.parseInt(totalLeave.getText());
                    
                    String reasonValue = reason.getText();
                    
                    boolean statusValue = true;
                    // Chưa có phiếu + Quản lý nộp
                    if (MySession.currentEmployee.getId() == 1) {
                        LeaveRequest leaveRequest = new LeaveRequest(employee, 1, MySession.currentEmployee, registraionDate,
                                currentDate, fromDateValue, toDateValue,
                                typeValue, startLeaveValue, totalDayValue, reasonValue, statusValue);
                        
                        leaveRequestDAO.add(leaveRequest);
                        
                        ApprovedLeaveRequest approvedLeaveRequest = new ApprovedLeaveRequest(leaveRequest, true);
                        approvedLeaveRequestDAO.add(approvedLeaveRequest);
                    } // Chưa có phiếu + HR nộp
                    else if (this.leaveRequest == null) {
                        LeaveRequest leaveRequest = new LeaveRequest(employee, registraionDate, fromDateValue, toDateValue, typeValue, startLeaveValue, totalDayValue, reasonValue, 2, statusValue);
                        leaveRequestDAO.add(leaveRequest);
                    } // Đã có phiếu + HR sửa
                    else {
                        leaveRequest.setToDate(toDateValue);
                        leaveRequest.setType(typeValue);
                        leaveRequest.setStartLeave(startLeaveValue);
                        leaveRequest.setTotalDay(totalDayValue);
                        leaveRequest.setReason(reasonValue);
                        
                        leaveRequestDAO.update(leaveRequest);
                    }
                    break;
                case "Duyệt":
                    leaveRequest.setApproveStatus(1);
                    leaveRequest.setApprover(MySession.currentEmployee);
                    leaveRequest.setApproveDate(currentDate);
                    leaveRequestDAO.add(leaveRequest);
                    
                    ApprovedLeaveRequest approvedLeaveRequest = new ApprovedLeaveRequest(leaveRequest, true);
                    approvedLeaveRequestDAO.add(approvedLeaveRequest);
                    break;
                default:
                // do something
            }
            
        } catch (Exception e) {
            System.out.println(e);
        }
        ManageLeaveApplication_Component.getInstance().changePage(SharedData.getInstance().getCurDateRange());
        close();
    }//GEN-LAST:event_confirmBtnActionPerformed

    private void toDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_toDatePropertyChange
        if ("date".equals(evt.getPropertyName())) {
            calculateDateDifference();
        }
    }//GEN-LAST:event_toDatePropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> amountLeave;
    private javax.swing.JLabel approveDate;
    private javax.swing.JLabel approverName;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JButton denyBtn;
    private javax.swing.JLabel from;
    private javax.swing.JLabel fromDate;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane reason;
    private javax.swing.JLabel registrationDate;
    private javax.swing.JLabel registrator;
    private com.toedter.calendar.JDateChooser toDate;
    private javax.swing.JLabel totalLeave;
    private javax.swing.JComboBox<String> typeOfLeave;
    // End of variables declaration//GEN-END:variables

    private void customComponents() {
        if (leaveRequest != null) {
            if (MySession.currentEmployee.getId() == 1) {
                confirmBtn.setText("Duyệt");
                denyBtn.setText("Từ chối");
            }
            if (leaveRequest.getApproveStatus() == 1) {
                confirmBtn.setEnabled(false);
                denyBtn.setEnabled(false);
                toDate.setEnabled(false);
                reason.setEditable(false);
                typeOfLeave.setEnabled(false);
                amountLeave.setEnabled(false);
            }
        }
        this.toDate.setMinSelectableDate(date);
    }
    
    private void initData() {
        Date currentDate = new Date();
        
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        
        String regisDate = dateFormat.format(currentDate);
        
        this.registrationDate.setText(regisDate);
        
        this.registrator.setText(employee.getName());
        
        String fromDate = dateFormat.format(date);
        this.fromDate.setText(fromDate);
        
        if (leaveRequest != null) {
            this.toDate.setDate(leaveRequest.getToDate());
            this.typeOfLeave.setSelectedItem(leaveRequest.getType());
            double startLeave = leaveRequest.getStartLeave();
            
            this.amountLeave.setSelectedItem(String.valueOf(startLeave));
            
            this.reason.setText(leaveRequest.getReason());
            
            String approverName = (leaveRequest.getApprover() == null) ? "" : leaveRequest.getApprover().getName();
            this.approverName.setText(approverName);
            
            String approveDate = customApproveDate(leaveRequest.getApproveDate());
            this.approveDate.setText(approveDate);
        } else {
            
            toDate.setDate(date);
            
        }
    }
    
    private void close() {
        Window window = SwingUtilities.getWindowAncestor(this);
        
        if (window instanceof JDialog) {
            ((JDialog) window).dispose();
        }
    }
    
    private void calculateDateDifference() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        
        try {
            String fromDateString = fromDate.getText();
            
            Date fromDate = dateFormat.parse(fromDateString);
            
            LocalDate fromLocalDate = convertToLocalDate(fromDate);
            
            Date toDate = this.toDate.getDate();
            if (toDate != null) {
                LocalDate toLocalDate = convertToLocalDate(toDate);
                
                long daysBetween = ChronoUnit.DAYS.between(fromLocalDate, toLocalDate) + 1;
                totalLeave.setText(String.valueOf(daysBetween));
            } else {
                totalLeave.setText("");
            }
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }
    
    private LocalDate convertToLocalDate(Date toDate) {
        Instant instant = toDate.toInstant();
        ZoneId zoneId = ZoneId.systemDefault();
        return instant.atZone(zoneId).toLocalDate();
    }
    
    private String customApproveDate(Date approveDate) {
        if (approveDate != null) {
            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy - HH:mm");
            return formatter.format(approveDate);
        }
        return "";
    }
    
}
