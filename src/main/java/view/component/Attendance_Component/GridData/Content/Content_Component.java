package view.component.Attendance_Component.GridData.Content;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
import controller.Session.SharedData;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import model.Employee;
import view.component.Attendance_Component.GridData.Data.Data_Container;
import view.component.Attendance_Component.GridData.Employee.EmployeeInfo_Container;
import view.component.Attendance_Component.GridData.Title.Title_Container;

/**
 *
 * @author LENOVO
 */
public class Content_Component extends javax.swing.JPanel {

    private EmployeeInfo_Container employeeInfo_Container;
    private Title_Container title_Container;
    private Data_Container data_Container;
    private static Content_Component instance;

    public Content_Component() {
        initComponents();
        initMyComponents();
        setLayout();
        addComponents();
    }

    public static Content_Component getInstance() {
        if (instance == null) {
            instance = new Content_Component();
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1120, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void setLayout() {
        this.setLayout(new GridBagLayout());
    }

    private void addComponents() {
        GridBagConstraints gbc = new GridBagConstraints();

        gbc.gridx = 0;
        gbc.gridy = 1;
        //gbc.fill = GridBagConstraints.BOTH;
        this.add(employeeInfo_Container, gbc);

        // Thêm hàng cố định vào lưới
        gbc.gridx = 1;
        gbc.gridy = 0;
        //gbc.fill = GridBagConstraints.HORIZONTAL;
        this.add(title_Container, gbc);

        // Thêm bảng dữ liệu vào lưới
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.weightx = 1;
        gbc.weighty = 1;
        this.add(data_Container, gbc);
    }

    private void initMyComponents() {
        employeeInfo_Container = new EmployeeInfo_Container();
        title_Container = new Title_Container();
        data_Container = new Data_Container();
    }

    public void updateEmployee() {
        employeeInfo_Container.updateData();
    }

    public EmployeeInfo_Container getEmployeeInfo_Container() {
        return employeeInfo_Container;
    }

    public Title_Container getTitle_Container() {
        return title_Container;
    }

    public Data_Container getLeaveForm_Container() {
        return data_Container;
    }

    public void setLeaveForm_Container(Data_Container data_Container) {
        this.data_Container = data_Container;
    }

    public void updateData() {
        data_Container.removeAll();
        for (Employee employee : SharedData.getInstance().getEmployee_Attendance()) {
            for (int i = 1; i <= 30; i++) {
                data_Container.updateData(employee);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
